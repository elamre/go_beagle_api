// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Mon, 21 Jun 2021 16:17:37 CEST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package beagle_bindings

/*
#cgo LDFLAGS: -L${SRCDIR} -lstdc++
#cgo CFLAGS: -I. -DDEBUG -I${SRCDIR}/
#include "beagle.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import (
	"runtime"
	"unsafe"
)

// Bg_find_devices function as declared in beagle/beagle.h:277
func Bg_find_devices(Num_devices int32, Devices []uint16) int32 {
	cNum_devices, cNum_devicesAllocMap := (C.int)(Num_devices), cgoAllocsUnknown
	cDevices, cDevicesAllocMap := copyPU16Bytes((*sliceHeader)(unsafe.Pointer(&Devices)))
	__ret := C.bg_find_devices(cNum_devices, cDevices)
	runtime.KeepAlive(cDevicesAllocMap)
	runtime.KeepAlive(cNum_devicesAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_find_devices_ext function as declared in beagle/beagle.h:293
func Bg_find_devices_ext(Num_devices int32, Devices []uint16, Num_ids int32, Unique_ids []uint32) int32 {
	cNum_devices, cNum_devicesAllocMap := (C.int)(Num_devices), cgoAllocsUnknown
	cDevices, cDevicesAllocMap := copyPU16Bytes((*sliceHeader)(unsafe.Pointer(&Devices)))
	cNum_ids, cNum_idsAllocMap := (C.int)(Num_ids), cgoAllocsUnknown
	cUnique_ids, cUnique_idsAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Unique_ids)))
	__ret := C.bg_find_devices_ext(cNum_devices, cDevices, cNum_ids, cUnique_ids)
	runtime.KeepAlive(cUnique_idsAllocMap)
	runtime.KeepAlive(cNum_idsAllocMap)
	runtime.KeepAlive(cDevicesAllocMap)
	runtime.KeepAlive(cNum_devicesAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_open function as declared in beagle/beagle.h:316
func Bg_open(Port_number int32) Beagle {
	cPort_number, cPort_numberAllocMap := (C.int)(Port_number), cgoAllocsUnknown
	__ret := C.bg_open(cPort_number)
	runtime.KeepAlive(cPort_numberAllocMap)
	__v := (Beagle)(__ret)
	return __v
}

// Bg_open_ext function as declared in beagle/beagle.h:348
func Bg_open_ext(Port_number int32, Bg_ext []BeagleExt) Beagle {
	cPort_number, cPort_numberAllocMap := (C.int)(Port_number), cgoAllocsUnknown
	cBg_ext, cBg_extAllocMap := unpackArgSBeagleExt(Bg_ext)
	__ret := C.bg_open_ext(cPort_number, cBg_ext)
	packSBeagleExt(Bg_ext, cBg_ext)
	runtime.KeepAlive(cBg_extAllocMap)
	runtime.KeepAlive(cPort_numberAllocMap)
	__v := (Beagle)(__ret)
	return __v
}

// Bg_close function as declared in beagle/beagle.h:355
func Bg_close(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_close(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_port function as declared in beagle/beagle.h:365
func Bg_port(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_port(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_features function as declared in beagle/beagle.h:381
func Bg_features(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_features(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_unique_id_to_features function as declared in beagle/beagle.h:386
func Bg_unique_id_to_features(Unique_id uint32) int32 {
	cUnique_id, cUnique_idAllocMap := (C.u32)(Unique_id), cgoAllocsUnknown
	__ret := C.bg_unique_id_to_features(cUnique_id)
	runtime.KeepAlive(cUnique_idAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_unique_id function as declared in beagle/beagle.h:397
func Bg_unique_id(Beagle Beagle) uint32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_unique_id(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Bg_status_string function as declared in beagle/beagle.h:407
func Bg_status_string(Status int32) string {
	cStatus, cStatusAllocMap := (C.int)(Status), cgoAllocsUnknown
	__ret := C.bg_status_string(cStatus)
	runtime.KeepAlive(cStatusAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Bg_version function as declared in beagle/beagle.h:417
func Bg_version(Beagle Beagle, Version []BeagleVersion) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cVersion, cVersionAllocMap := unpackArgSBeagleVersion(Version)
	__ret := C.bg_version(cBeagle, cVersion)
	packSBeagleVersion(Version, cVersion)
	runtime.KeepAlive(cVersionAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_latency function as declared in beagle/beagle.h:430
func Bg_latency(Beagle Beagle, Milliseconds uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cMilliseconds, cMillisecondsAllocMap := (C.u32)(Milliseconds), cgoAllocsUnknown
	__ret := C.bg_latency(cBeagle, cMilliseconds)
	runtime.KeepAlive(cMillisecondsAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_timeout function as declared in beagle/beagle.h:441
func Bg_timeout(Beagle Beagle, Milliseconds uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cMilliseconds, cMillisecondsAllocMap := (C.u32)(Milliseconds), cgoAllocsUnknown
	__ret := C.bg_timeout(cBeagle, cMilliseconds)
	runtime.KeepAlive(cMillisecondsAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_sleep_ms function as declared in beagle/beagle.h:452
func Bg_sleep_ms(Milliseconds uint32) uint32 {
	cMilliseconds, cMillisecondsAllocMap := (C.u32)(Milliseconds), cgoAllocsUnknown
	__ret := C.bg_sleep_ms(cMilliseconds)
	runtime.KeepAlive(cMillisecondsAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Bg_target_power function as declared in beagle/beagle.h:461
func Bg_target_power(Beagle Beagle, Power_flag byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cPower_flag, cPower_flagAllocMap := (C.u08)(Power_flag), cgoAllocsUnknown
	__ret := C.bg_target_power(cBeagle, cPower_flag)
	runtime.KeepAlive(cPower_flagAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_host_ifce_speed function as declared in beagle/beagle.h:470
func Bg_host_ifce_speed(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_host_ifce_speed(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_dev_addr function as declared in beagle/beagle.h:476
func Bg_dev_addr(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_dev_addr(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_host_buffer_size function as declared in beagle/beagle.h:487
func Bg_host_buffer_size(Beagle Beagle, Num_bytes uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cNum_bytes, cNum_bytesAllocMap := (C.u32)(Num_bytes), cgoAllocsUnknown
	__ret := C.bg_host_buffer_size(cBeagle, cNum_bytes)
	runtime.KeepAlive(cNum_bytesAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_host_buffer_free function as declared in beagle/beagle.h:494
func Bg_host_buffer_free(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_host_buffer_free(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_host_buffer_used function as declared in beagle/beagle.h:500
func Bg_host_buffer_used(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_host_buffer_used(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_commtest function as declared in beagle/beagle.h:506
func Bg_commtest(Beagle Beagle, Num_samples int32, Delay_count int32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cNum_samples, cNum_samplesAllocMap := (C.int)(Num_samples), cgoAllocsUnknown
	cDelay_count, cDelay_countAllocMap := (C.int)(Delay_count), cgoAllocsUnknown
	__ret := C.bg_commtest(cBeagle, cNum_samples, cDelay_count)
	runtime.KeepAlive(cDelay_countAllocMap)
	runtime.KeepAlive(cNum_samplesAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_enable function as declared in beagle/beagle.h:542
func Bg_enable(Beagle Beagle, Protocol BeagleProtocol) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cProtocol, cProtocolAllocMap := (C.BeagleProtocol)(Protocol), cgoAllocsUnknown
	__ret := C.bg_enable(cBeagle, cProtocol)
	runtime.KeepAlive(cProtocolAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_disable function as declared in beagle/beagle.h:549
func Bg_disable(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_disable(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_capture_stop function as declared in beagle/beagle.h:559
func Bg_capture_stop(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_capture_stop(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_capture_trigger function as declared in beagle/beagle.h:564
func Bg_capture_trigger(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_capture_trigger(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_capture_trigger_wait function as declared in beagle/beagle.h:587
func Bg_capture_trigger_wait(Beagle Beagle, Timeout_ms uint32, Status []BeagleCaptureStatus) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cTimeout_ms, cTimeout_msAllocMap := (C.u32)(Timeout_ms), cgoAllocsUnknown
	cStatus, cStatusAllocMap := copyPBeagleCaptureStatusBytes((*sliceHeader)(unsafe.Pointer(&Status)))
	__ret := C.bg_capture_trigger_wait(cBeagle, cTimeout_ms, cStatus)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cTimeout_msAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_samplerate function as declared in beagle/beagle.h:595
func Bg_samplerate(Beagle Beagle, Samplerate_khz int32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cSamplerate_khz, cSamplerate_khzAllocMap := (C.int)(Samplerate_khz), cgoAllocsUnknown
	__ret := C.bg_samplerate(cBeagle, cSamplerate_khz)
	runtime.KeepAlive(cSamplerate_khzAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_bit_timing_size function as declared in beagle/beagle.h:607
func Bg_bit_timing_size(Protocol BeagleProtocol, Num_data_bytes int32) int32 {
	cProtocol, cProtocolAllocMap := (C.BeagleProtocol)(Protocol), cgoAllocsUnknown
	cNum_data_bytes, cNum_data_bytesAllocMap := (C.int)(Num_data_bytes), cgoAllocsUnknown
	__ret := C.bg_bit_timing_size(cProtocol, cNum_data_bytes)
	runtime.KeepAlive(cNum_data_bytesAllocMap)
	runtime.KeepAlive(cProtocolAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_i2c_pullup function as declared in beagle/beagle.h:621
func Bg_i2c_pullup(Beagle Beagle, Pullup_flag byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cPullup_flag, cPullup_flagAllocMap := (C.u08)(Pullup_flag), cgoAllocsUnknown
	__ret := C.bg_i2c_pullup(cBeagle, cPullup_flag)
	runtime.KeepAlive(cPullup_flagAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_i2c_read function as declared in beagle/beagle.h:630
func Bg_i2c_read(Beagle Beagle, Status []uint32, Time_sop []uint64, Time_duration []uint64, Time_dataoffset []uint32, Max_bytes int32, Data_in []uint16) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Status)))
	cTime_sop, cTime_sopAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_sop)))
	cTime_duration, cTime_durationAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_duration)))
	cTime_dataoffset, cTime_dataoffsetAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Time_dataoffset)))
	cMax_bytes, cMax_bytesAllocMap := (C.int)(Max_bytes), cgoAllocsUnknown
	cData_in, cData_inAllocMap := copyPU16Bytes((*sliceHeader)(unsafe.Pointer(&Data_in)))
	__ret := C.bg_i2c_read(cBeagle, cStatus, cTime_sop, cTime_duration, cTime_dataoffset, cMax_bytes, cData_in)
	runtime.KeepAlive(cData_inAllocMap)
	runtime.KeepAlive(cMax_bytesAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_i2c_read_data_timing function as declared in beagle/beagle.h:641
func Bg_i2c_read_data_timing(Beagle Beagle, Status []uint32, Time_sop []uint64, Time_duration []uint64, Time_dataoffset []uint32, Max_bytes int32, Data_in []uint16, Max_timing int32, Data_timing []uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Status)))
	cTime_sop, cTime_sopAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_sop)))
	cTime_duration, cTime_durationAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_duration)))
	cTime_dataoffset, cTime_dataoffsetAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Time_dataoffset)))
	cMax_bytes, cMax_bytesAllocMap := (C.int)(Max_bytes), cgoAllocsUnknown
	cData_in, cData_inAllocMap := copyPU16Bytes((*sliceHeader)(unsafe.Pointer(&Data_in)))
	cMax_timing, cMax_timingAllocMap := (C.int)(Max_timing), cgoAllocsUnknown
	cData_timing, cData_timingAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Data_timing)))
	__ret := C.bg_i2c_read_data_timing(cBeagle, cStatus, cTime_sop, cTime_duration, cTime_dataoffset, cMax_bytes, cData_in, cMax_timing, cData_timing)
	runtime.KeepAlive(cData_timingAllocMap)
	runtime.KeepAlive(cMax_timingAllocMap)
	runtime.KeepAlive(cData_inAllocMap)
	runtime.KeepAlive(cMax_bytesAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_i2c_read_bit_timing function as declared in beagle/beagle.h:654
func Bg_i2c_read_bit_timing(Beagle Beagle, Status []uint32, Time_sop []uint64, Time_duration []uint64, Time_dataoffset []uint32, Max_bytes int32, Data_in []uint16, Max_timing int32, Bit_timing []uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Status)))
	cTime_sop, cTime_sopAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_sop)))
	cTime_duration, cTime_durationAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_duration)))
	cTime_dataoffset, cTime_dataoffsetAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Time_dataoffset)))
	cMax_bytes, cMax_bytesAllocMap := (C.int)(Max_bytes), cgoAllocsUnknown
	cData_in, cData_inAllocMap := copyPU16Bytes((*sliceHeader)(unsafe.Pointer(&Data_in)))
	cMax_timing, cMax_timingAllocMap := (C.int)(Max_timing), cgoAllocsUnknown
	cBit_timing, cBit_timingAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Bit_timing)))
	__ret := C.bg_i2c_read_bit_timing(cBeagle, cStatus, cTime_sop, cTime_duration, cTime_dataoffset, cMax_bytes, cData_in, cMax_timing, cBit_timing)
	runtime.KeepAlive(cBit_timingAllocMap)
	runtime.KeepAlive(cMax_timingAllocMap)
	runtime.KeepAlive(cData_inAllocMap)
	runtime.KeepAlive(cMax_bytesAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_spi_configure function as declared in beagle/beagle.h:695
func Bg_spi_configure(Beagle Beagle, Ss_polarity BeagleSpiSSPolarity, Sck_sampling_edge BeagleSpiSckSamplingEdge, Bitorder BeagleSpiBitorder) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cSs_polarity, cSs_polarityAllocMap := (C.BeagleSpiSSPolarity)(Ss_polarity), cgoAllocsUnknown
	cSck_sampling_edge, cSck_sampling_edgeAllocMap := (C.BeagleSpiSckSamplingEdge)(Sck_sampling_edge), cgoAllocsUnknown
	cBitorder, cBitorderAllocMap := (C.BeagleSpiBitorder)(Bitorder), cgoAllocsUnknown
	__ret := C.bg_spi_configure(cBeagle, cSs_polarity, cSck_sampling_edge, cBitorder)
	runtime.KeepAlive(cBitorderAllocMap)
	runtime.KeepAlive(cSck_sampling_edgeAllocMap)
	runtime.KeepAlive(cSs_polarityAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_spi_read function as declared in beagle/beagle.h:703
func Bg_spi_read(Beagle Beagle, Status []uint32, Time_sop []uint64, Time_duration []uint64, Time_dataoffset []uint32, Mosi_max_bytes int32, Data_mosi []byte, Miso_max_bytes int32, Data_miso []byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Status)))
	cTime_sop, cTime_sopAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_sop)))
	cTime_duration, cTime_durationAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_duration)))
	cTime_dataoffset, cTime_dataoffsetAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Time_dataoffset)))
	cMosi_max_bytes, cMosi_max_bytesAllocMap := (C.int)(Mosi_max_bytes), cgoAllocsUnknown
	cData_mosi, cData_mosiAllocMap := copyPU08Bytes((*sliceHeader)(unsafe.Pointer(&Data_mosi)))
	cMiso_max_bytes, cMiso_max_bytesAllocMap := (C.int)(Miso_max_bytes), cgoAllocsUnknown
	cData_miso, cData_misoAllocMap := copyPU08Bytes((*sliceHeader)(unsafe.Pointer(&Data_miso)))
	__ret := C.bg_spi_read(cBeagle, cStatus, cTime_sop, cTime_duration, cTime_dataoffset, cMosi_max_bytes, cData_mosi, cMiso_max_bytes, cData_miso)
	runtime.KeepAlive(cData_misoAllocMap)
	runtime.KeepAlive(cMiso_max_bytesAllocMap)
	runtime.KeepAlive(cData_mosiAllocMap)
	runtime.KeepAlive(cMosi_max_bytesAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_spi_read_data_timing function as declared in beagle/beagle.h:716
func Bg_spi_read_data_timing(Beagle Beagle, Status []uint32, Time_sop []uint64, Time_duration []uint64, Time_dataoffset []uint32, Mosi_max_bytes int32, Data_mosi []byte, Miso_max_bytes int32, Data_miso []byte, Max_timing int32, Data_timing []uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Status)))
	cTime_sop, cTime_sopAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_sop)))
	cTime_duration, cTime_durationAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_duration)))
	cTime_dataoffset, cTime_dataoffsetAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Time_dataoffset)))
	cMosi_max_bytes, cMosi_max_bytesAllocMap := (C.int)(Mosi_max_bytes), cgoAllocsUnknown
	cData_mosi, cData_mosiAllocMap := copyPU08Bytes((*sliceHeader)(unsafe.Pointer(&Data_mosi)))
	cMiso_max_bytes, cMiso_max_bytesAllocMap := (C.int)(Miso_max_bytes), cgoAllocsUnknown
	cData_miso, cData_misoAllocMap := copyPU08Bytes((*sliceHeader)(unsafe.Pointer(&Data_miso)))
	cMax_timing, cMax_timingAllocMap := (C.int)(Max_timing), cgoAllocsUnknown
	cData_timing, cData_timingAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Data_timing)))
	__ret := C.bg_spi_read_data_timing(cBeagle, cStatus, cTime_sop, cTime_duration, cTime_dataoffset, cMosi_max_bytes, cData_mosi, cMiso_max_bytes, cData_miso, cMax_timing, cData_timing)
	runtime.KeepAlive(cData_timingAllocMap)
	runtime.KeepAlive(cMax_timingAllocMap)
	runtime.KeepAlive(cData_misoAllocMap)
	runtime.KeepAlive(cMiso_max_bytesAllocMap)
	runtime.KeepAlive(cData_mosiAllocMap)
	runtime.KeepAlive(cMosi_max_bytesAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_spi_read_bit_timing function as declared in beagle/beagle.h:731
func Bg_spi_read_bit_timing(Beagle Beagle, Status []uint32, Time_sop []uint64, Time_duration []uint64, Time_dataoffset []uint32, Mosi_max_bytes int32, Data_mosi []byte, Miso_max_bytes int32, Data_miso []byte, Max_timing int32, Bit_timing []uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Status)))
	cTime_sop, cTime_sopAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_sop)))
	cTime_duration, cTime_durationAllocMap := copyPU64Bytes((*sliceHeader)(unsafe.Pointer(&Time_duration)))
	cTime_dataoffset, cTime_dataoffsetAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Time_dataoffset)))
	cMosi_max_bytes, cMosi_max_bytesAllocMap := (C.int)(Mosi_max_bytes), cgoAllocsUnknown
	cData_mosi, cData_mosiAllocMap := copyPU08Bytes((*sliceHeader)(unsafe.Pointer(&Data_mosi)))
	cMiso_max_bytes, cMiso_max_bytesAllocMap := (C.int)(Miso_max_bytes), cgoAllocsUnknown
	cData_miso, cData_misoAllocMap := copyPU08Bytes((*sliceHeader)(unsafe.Pointer(&Data_miso)))
	cMax_timing, cMax_timingAllocMap := (C.int)(Max_timing), cgoAllocsUnknown
	cBit_timing, cBit_timingAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Bit_timing)))
	__ret := C.bg_spi_read_bit_timing(cBeagle, cStatus, cTime_sop, cTime_duration, cTime_dataoffset, cMosi_max_bytes, cData_mosi, cMiso_max_bytes, cData_miso, cMax_timing, cBit_timing)
	runtime.KeepAlive(cBit_timingAllocMap)
	runtime.KeepAlive(cMax_timingAllocMap)
	runtime.KeepAlive(cData_misoAllocMap)
	runtime.KeepAlive(cMiso_max_bytesAllocMap)
	runtime.KeepAlive(cData_mosiAllocMap)
	runtime.KeepAlive(cMosi_max_bytesAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb_features function as declared in beagle/beagle.h:922
func Bg_usb_features(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_usb_features(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb_license_read function as declared in beagle/beagle.h:934
func Bg_usb_license_read(Beagle Beagle, Length int32, License_key *byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cLength, cLengthAllocMap := (C.int)(Length), cgoAllocsUnknown
	cLicense_key, cLicense_keyAllocMap := (*C.u08)(unsafe.Pointer(License_key)), cgoAllocsUnknown
	__ret := C.bg_usb_license_read(cBeagle, cLength, cLicense_key)
	runtime.KeepAlive(cLicense_keyAllocMap)
	runtime.KeepAlive(cLengthAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb_license_write function as declared in beagle/beagle.h:948
func Bg_usb_license_write(Beagle Beagle, Length int32, License_key *byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cLength, cLengthAllocMap := (C.int)(Length), cgoAllocsUnknown
	cLicense_key, cLicense_keyAllocMap := (*C.u08)(unsafe.Pointer(License_key)), cgoAllocsUnknown
	__ret := C.bg_usb_license_write(cBeagle, cLength, cLicense_key)
	runtime.KeepAlive(cLicense_keyAllocMap)
	runtime.KeepAlive(cLengthAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb_configure function as declared in beagle/beagle.h:969
func Bg_usb_configure(Beagle Beagle, Cap_mask byte, Trigger_mode BeagleUsbTriggerMode) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cCap_mask, cCap_maskAllocMap := (C.u08)(Cap_mask), cgoAllocsUnknown
	cTrigger_mode, cTrigger_modeAllocMap := (C.BeagleUsbTriggerMode)(Trigger_mode), cgoAllocsUnknown
	__ret := C.bg_usb_configure(cBeagle, cCap_mask, cTrigger_mode)
	runtime.KeepAlive(cTrigger_modeAllocMap)
	runtime.KeepAlive(cCap_maskAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb_target_power function as declared in beagle/beagle.h:985
func Bg_usb_target_power(Beagle Beagle, Power_flag BeagleUsbTargetPower) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cPower_flag, cPower_flagAllocMap := (C.BeagleUsbTargetPower)(Power_flag), cgoAllocsUnknown
	__ret := C.bg_usb_target_power(cBeagle, cPower_flag)
	runtime.KeepAlive(cPower_flagAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_capture_config function as declared in beagle/beagle.h:1002
func Bg_usb2_capture_config(Beagle Beagle, Capture_mode BeagleUsb2CaptureMode) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cCapture_mode, cCapture_modeAllocMap := (C.BeagleUsb2CaptureMode)(Capture_mode), cgoAllocsUnknown
	__ret := C.bg_usb2_capture_config(cBeagle, cCapture_mode)
	runtime.KeepAlive(cCapture_modeAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_target_config function as declared in beagle/beagle.h:1014
func Bg_usb2_target_config(Beagle Beagle, Target_config uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cTarget_config, cTarget_configAllocMap := (C.u32)(Target_config), cgoAllocsUnknown
	__ret := C.bg_usb2_target_config(cBeagle, cTarget_config)
	runtime.KeepAlive(cTarget_configAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_capture_buffer_config function as declared in beagle/beagle.h:1024
func Bg_usb2_capture_buffer_config(Beagle Beagle, Pretrig_kb uint32, Capture_kb uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cPretrig_kb, cPretrig_kbAllocMap := (C.u32)(Pretrig_kb), cgoAllocsUnknown
	cCapture_kb, cCapture_kbAllocMap := (C.u32)(Capture_kb), cgoAllocsUnknown
	__ret := C.bg_usb2_capture_buffer_config(cBeagle, cPretrig_kb, cCapture_kb)
	runtime.KeepAlive(cCapture_kbAllocMap)
	runtime.KeepAlive(cPretrig_kbAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_capture_buffer_config_query function as declared in beagle/beagle.h:1031
func Bg_usb2_capture_buffer_config_query(Beagle Beagle, Pretrig_kb []uint32, Capture_kb []uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cPretrig_kb, cPretrig_kbAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Pretrig_kb)))
	cCapture_kb, cCapture_kbAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Capture_kb)))
	__ret := C.bg_usb2_capture_buffer_config_query(cBeagle, cPretrig_kb, cCapture_kb)
	runtime.KeepAlive(cCapture_kbAllocMap)
	runtime.KeepAlive(cPretrig_kbAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_capture_status function as declared in beagle/beagle.h:1038
func Bg_usb2_capture_status(Beagle Beagle, Status *BeagleCaptureStatus, Pretrig_remaining_kb *uint32, Pretrig_total_kb *uint32, Capture_remaining_kb *uint32, Capture_total_kb *uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := (*C.BeagleCaptureStatus)(unsafe.Pointer(Status)), cgoAllocsUnknown
	cPretrig_remaining_kb, cPretrig_remaining_kbAllocMap := (*C.u32)(unsafe.Pointer(Pretrig_remaining_kb)), cgoAllocsUnknown
	cPretrig_total_kb, cPretrig_total_kbAllocMap := (*C.u32)(unsafe.Pointer(Pretrig_total_kb)), cgoAllocsUnknown
	cCapture_remaining_kb, cCapture_remaining_kbAllocMap := (*C.u32)(unsafe.Pointer(Capture_remaining_kb)), cgoAllocsUnknown
	cCapture_total_kb, cCapture_total_kbAllocMap := (*C.u32)(unsafe.Pointer(Capture_total_kb)), cgoAllocsUnknown
	__ret := C.bg_usb2_capture_status(cBeagle, cStatus, cPretrig_remaining_kb, cPretrig_total_kb, cCapture_remaining_kb, cCapture_total_kb)
	runtime.KeepAlive(cCapture_total_kbAllocMap)
	runtime.KeepAlive(cCapture_remaining_kbAllocMap)
	runtime.KeepAlive(cPretrig_total_kbAllocMap)
	runtime.KeepAlive(cPretrig_remaining_kbAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_digital_out_config function as declared in beagle/beagle.h:1061
func Bg_usb2_digital_out_config(Beagle Beagle, Out_enable_mask byte, Out_polarity_mask byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cOut_enable_mask, cOut_enable_maskAllocMap := (C.u08)(Out_enable_mask), cgoAllocsUnknown
	cOut_polarity_mask, cOut_polarity_maskAllocMap := (C.u08)(Out_polarity_mask), cgoAllocsUnknown
	__ret := C.bg_usb2_digital_out_config(cBeagle, cOut_enable_mask, cOut_polarity_mask)
	runtime.KeepAlive(cOut_polarity_maskAllocMap)
	runtime.KeepAlive(cOut_enable_maskAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_digital_out_match function as declared in beagle/beagle.h:1117
func Bg_usb2_digital_out_match(Beagle Beagle, Pin_num BeagleUsb2DigitalOutMatchPins, Packet_match *BeagleUsb2PacketMatch, Data_match *BeagleUsb2DataMatch) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cPin_num, cPin_numAllocMap := (C.BeagleUsb2DigitalOutMatchPins)(Pin_num), cgoAllocsUnknown
	cPacket_match, cPacket_matchAllocMap := Packet_match.PassRef()
	cData_match, cData_matchAllocMap := Data_match.PassRef()
	__ret := C.bg_usb2_digital_out_match(cBeagle, cPin_num, cPacket_match, cData_match)
	runtime.KeepAlive(cData_matchAllocMap)
	runtime.KeepAlive(cPacket_matchAllocMap)
	runtime.KeepAlive(cPin_numAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_digital_in_config function as declared in beagle/beagle.h:1130
func Bg_usb2_digital_in_config(Beagle Beagle, In_enable_mask byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cIn_enable_mask, cIn_enable_maskAllocMap := (C.u08)(In_enable_mask), cgoAllocsUnknown
	__ret := C.bg_usb2_digital_in_config(cBeagle, cIn_enable_mask)
	runtime.KeepAlive(cIn_enable_maskAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_hw_filter_config function as declared in beagle/beagle.h:1143
func Bg_usb2_hw_filter_config(Beagle Beagle, Filter_enable_mask byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cFilter_enable_mask, cFilter_enable_maskAllocMap := (C.u08)(Filter_enable_mask), cgoAllocsUnknown
	__ret := C.bg_usb2_hw_filter_config(cBeagle, cFilter_enable_mask)
	runtime.KeepAlive(cFilter_enable_maskAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_simple_match_config function as declared in beagle/beagle.h:1149
func Bg_usb2_simple_match_config(Beagle Beagle, Dig_in_pin_pos_edge_mask byte, Dig_in_pin_neg_edge_mask byte, Dig_out_match_pin_mask byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cDig_in_pin_pos_edge_mask, cDig_in_pin_pos_edge_maskAllocMap := (C.u08)(Dig_in_pin_pos_edge_mask), cgoAllocsUnknown
	cDig_in_pin_neg_edge_mask, cDig_in_pin_neg_edge_maskAllocMap := (C.u08)(Dig_in_pin_neg_edge_mask), cgoAllocsUnknown
	cDig_out_match_pin_mask, cDig_out_match_pin_maskAllocMap := (C.u08)(Dig_out_match_pin_mask), cgoAllocsUnknown
	__ret := C.bg_usb2_simple_match_config(cBeagle, cDig_in_pin_pos_edge_mask, cDig_in_pin_neg_edge_mask, cDig_out_match_pin_mask)
	runtime.KeepAlive(cDig_out_match_pin_maskAllocMap)
	runtime.KeepAlive(cDig_in_pin_neg_edge_maskAllocMap)
	runtime.KeepAlive(cDig_in_pin_pos_edge_maskAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_complex_match_enable function as declared in beagle/beagle.h:1158
func Bg_usb2_complex_match_enable(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_usb2_complex_match_enable(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_complex_match_disable function as declared in beagle/beagle.h:1163
func Bg_usb2_complex_match_disable(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_usb2_complex_match_disable(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_complex_match_config function as declared in beagle/beagle.h:1382
func Bg_usb2_complex_match_config(Beagle Beagle, Validate byte, Digout byte, State_0 *BeagleUsb2ComplexMatchState, State_1 *BeagleUsb2ComplexMatchState, State_2 *BeagleUsb2ComplexMatchState, State_3 *BeagleUsb2ComplexMatchState, State_4 *BeagleUsb2ComplexMatchState, State_5 *BeagleUsb2ComplexMatchState, State_6 *BeagleUsb2ComplexMatchState, State_7 *BeagleUsb2ComplexMatchState) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cValidate, cValidateAllocMap := (C.u08)(Validate), cgoAllocsUnknown
	cDigout, cDigoutAllocMap := (C.u08)(Digout), cgoAllocsUnknown
	cState_0, cState_0AllocMap := State_0.PassRef()
	cState_1, cState_1AllocMap := State_1.PassRef()
	cState_2, cState_2AllocMap := State_2.PassRef()
	cState_3, cState_3AllocMap := State_3.PassRef()
	cState_4, cState_4AllocMap := State_4.PassRef()
	cState_5, cState_5AllocMap := State_5.PassRef()
	cState_6, cState_6AllocMap := State_6.PassRef()
	cState_7, cState_7AllocMap := State_7.PassRef()
	__ret := C.bg_usb2_complex_match_config(cBeagle, cValidate, cDigout, cState_0, cState_1, cState_2, cState_3, cState_4, cState_5, cState_6, cState_7)
	runtime.KeepAlive(cState_7AllocMap)
	runtime.KeepAlive(cState_6AllocMap)
	runtime.KeepAlive(cState_5AllocMap)
	runtime.KeepAlive(cState_4AllocMap)
	runtime.KeepAlive(cState_3AllocMap)
	runtime.KeepAlive(cState_2AllocMap)
	runtime.KeepAlive(cState_1AllocMap)
	runtime.KeepAlive(cState_0AllocMap)
	runtime.KeepAlive(cDigoutAllocMap)
	runtime.KeepAlive(cValidateAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_complex_match_config_single function as declared in beagle/beagle.h:1397
func Bg_usb2_complex_match_config_single(Beagle Beagle, Validate byte, Digout byte, State *BeagleUsb2ComplexMatchState) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cValidate, cValidateAllocMap := (C.u08)(Validate), cgoAllocsUnknown
	cDigout, cDigoutAllocMap := (C.u08)(Digout), cgoAllocsUnknown
	cState, cStateAllocMap := State.PassRef()
	__ret := C.bg_usb2_complex_match_config_single(cBeagle, cValidate, cDigout, cState)
	runtime.KeepAlive(cStateAllocMap)
	runtime.KeepAlive(cDigoutAllocMap)
	runtime.KeepAlive(cValidateAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_extout_config function as declared in beagle/beagle.h:1417
func Bg_usb2_extout_config(Beagle Beagle, Extout_modulation BeagleUsbExtoutType) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cExtout_modulation, cExtout_modulationAllocMap := (C.BeagleUsbExtoutType)(Extout_modulation), cgoAllocsUnknown
	__ret := C.bg_usb2_extout_config(cBeagle, cExtout_modulation)
	runtime.KeepAlive(cExtout_modulationAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_memory_test function as declared in beagle/beagle.h:1431
func Bg_usb2_memory_test(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_usb2_memory_test(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_capture_buffer_config function as declared in beagle/beagle.h:1438
func Bg_usb3_capture_buffer_config(Beagle Beagle, Pretrig_kb uint32, Capture_kb uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cPretrig_kb, cPretrig_kbAllocMap := (C.u32)(Pretrig_kb), cgoAllocsUnknown
	cCapture_kb, cCapture_kbAllocMap := (C.u32)(Capture_kb), cgoAllocsUnknown
	__ret := C.bg_usb3_capture_buffer_config(cBeagle, cPretrig_kb, cCapture_kb)
	runtime.KeepAlive(cCapture_kbAllocMap)
	runtime.KeepAlive(cPretrig_kbAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_capture_buffer_config_query function as declared in beagle/beagle.h:1445
func Bg_usb3_capture_buffer_config_query(Beagle Beagle, Pretrig_kb *uint32, Capture_kb *uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cPretrig_kb, cPretrig_kbAllocMap := (*C.u32)(unsafe.Pointer(Pretrig_kb)), cgoAllocsUnknown
	cCapture_kb, cCapture_kbAllocMap := (*C.u32)(unsafe.Pointer(Capture_kb)), cgoAllocsUnknown
	__ret := C.bg_usb3_capture_buffer_config_query(cBeagle, cPretrig_kb, cCapture_kb)
	runtime.KeepAlive(cCapture_kbAllocMap)
	runtime.KeepAlive(cPretrig_kbAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_capture_status function as declared in beagle/beagle.h:1452
func Bg_usb3_capture_status(Beagle Beagle, Status *BeagleCaptureStatus, Pretrig_remaining_kb *uint32, Pretrig_total_kb *uint32, Capture_remaining_kb *uint32, Capture_total_kb *uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := (*C.BeagleCaptureStatus)(unsafe.Pointer(Status)), cgoAllocsUnknown
	cPretrig_remaining_kb, cPretrig_remaining_kbAllocMap := (*C.u32)(unsafe.Pointer(Pretrig_remaining_kb)), cgoAllocsUnknown
	cPretrig_total_kb, cPretrig_total_kbAllocMap := (*C.u32)(unsafe.Pointer(Pretrig_total_kb)), cgoAllocsUnknown
	cCapture_remaining_kb, cCapture_remaining_kbAllocMap := (*C.u32)(unsafe.Pointer(Capture_remaining_kb)), cgoAllocsUnknown
	cCapture_total_kb, cCapture_total_kbAllocMap := (*C.u32)(unsafe.Pointer(Capture_total_kb)), cgoAllocsUnknown
	__ret := C.bg_usb3_capture_status(cBeagle, cStatus, cPretrig_remaining_kb, cPretrig_total_kb, cCapture_remaining_kb, cCapture_total_kb)
	runtime.KeepAlive(cCapture_total_kbAllocMap)
	runtime.KeepAlive(cCapture_remaining_kbAllocMap)
	runtime.KeepAlive(cPretrig_total_kbAllocMap)
	runtime.KeepAlive(cPretrig_remaining_kbAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_phy_config function as declared in beagle/beagle.h:1474
func Bg_usb3_phy_config(Beagle Beagle, Tx byte, Rx byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cTx, cTxAllocMap := (C.u08)(Tx), cgoAllocsUnknown
	cRx, cRxAllocMap := (C.u08)(Rx), cgoAllocsUnknown
	__ret := C.bg_usb3_phy_config(cBeagle, cTx, cRx)
	runtime.KeepAlive(cRxAllocMap)
	runtime.KeepAlive(cTxAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_truncation_mode function as declared in beagle/beagle.h:1485
func Bg_usb3_truncation_mode(Beagle Beagle, Tx_truncation_mode byte, Rx_truncation_mode byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cTx_truncation_mode, cTx_truncation_modeAllocMap := (C.u08)(Tx_truncation_mode), cgoAllocsUnknown
	cRx_truncation_mode, cRx_truncation_modeAllocMap := (C.u08)(Rx_truncation_mode), cgoAllocsUnknown
	__ret := C.bg_usb3_truncation_mode(cBeagle, cTx_truncation_mode, cRx_truncation_mode)
	runtime.KeepAlive(cRx_truncation_modeAllocMap)
	runtime.KeepAlive(cTx_truncation_modeAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_link_config function as declared in beagle/beagle.h:1511
func Bg_usb3_link_config(Beagle Beagle, Tx *BeagleUsb3Channel, Rx *BeagleUsb3Channel) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cTx, cTxAllocMap := Tx.PassRef()
	cRx, cRxAllocMap := Rx.PassRef()
	__ret := C.bg_usb3_link_config(cBeagle, cTx, cRx)
	runtime.KeepAlive(cRxAllocMap)
	runtime.KeepAlive(cTxAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_simple_match_config function as declared in beagle/beagle.h:1574
func Bg_usb3_simple_match_config(Beagle Beagle, Trigger_mask uint32, Extout_mask uint32, Extout_mode BeagleUsb3ExtoutMode, Extin_edge_mask byte, Tx_ips_type BeagleUsb3IPSType, Rx_ips_type BeagleUsb3IPSType) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cTrigger_mask, cTrigger_maskAllocMap := (C.u32)(Trigger_mask), cgoAllocsUnknown
	cExtout_mask, cExtout_maskAllocMap := (C.u32)(Extout_mask), cgoAllocsUnknown
	cExtout_mode, cExtout_modeAllocMap := (C.BeagleUsb3ExtoutMode)(Extout_mode), cgoAllocsUnknown
	cExtin_edge_mask, cExtin_edge_maskAllocMap := (C.u08)(Extin_edge_mask), cgoAllocsUnknown
	cTx_ips_type, cTx_ips_typeAllocMap := (C.BeagleUsb3IPSType)(Tx_ips_type), cgoAllocsUnknown
	cRx_ips_type, cRx_ips_typeAllocMap := (C.BeagleUsb3IPSType)(Rx_ips_type), cgoAllocsUnknown
	__ret := C.bg_usb3_simple_match_config(cBeagle, cTrigger_mask, cExtout_mask, cExtout_mode, cExtin_edge_mask, cTx_ips_type, cRx_ips_type)
	runtime.KeepAlive(cRx_ips_typeAllocMap)
	runtime.KeepAlive(cTx_ips_typeAllocMap)
	runtime.KeepAlive(cExtin_edge_maskAllocMap)
	runtime.KeepAlive(cExtout_modeAllocMap)
	runtime.KeepAlive(cExtout_maskAllocMap)
	runtime.KeepAlive(cTrigger_maskAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_complex_match_enable function as declared in beagle/beagle.h:1586
func Bg_usb3_complex_match_enable(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_usb3_complex_match_enable(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_complex_match_disable function as declared in beagle/beagle.h:1591
func Bg_usb3_complex_match_disable(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_usb3_complex_match_disable(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_complex_match_config function as declared in beagle/beagle.h:1753
func Bg_usb3_complex_match_config(Beagle Beagle, Validate byte, Extout byte, State_0 *BeagleUsb3ComplexMatchState, State_1 *BeagleUsb3ComplexMatchState, State_2 *BeagleUsb3ComplexMatchState, State_3 *BeagleUsb3ComplexMatchState, State_4 *BeagleUsb3ComplexMatchState, State_5 *BeagleUsb3ComplexMatchState, State_6 *BeagleUsb3ComplexMatchState, State_7 *BeagleUsb3ComplexMatchState) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cValidate, cValidateAllocMap := (C.u08)(Validate), cgoAllocsUnknown
	cExtout, cExtoutAllocMap := (C.u08)(Extout), cgoAllocsUnknown
	cState_0, cState_0AllocMap := State_0.PassRef()
	cState_1, cState_1AllocMap := State_1.PassRef()
	cState_2, cState_2AllocMap := State_2.PassRef()
	cState_3, cState_3AllocMap := State_3.PassRef()
	cState_4, cState_4AllocMap := State_4.PassRef()
	cState_5, cState_5AllocMap := State_5.PassRef()
	cState_6, cState_6AllocMap := State_6.PassRef()
	cState_7, cState_7AllocMap := State_7.PassRef()
	__ret := C.bg_usb3_complex_match_config(cBeagle, cValidate, cExtout, cState_0, cState_1, cState_2, cState_3, cState_4, cState_5, cState_6, cState_7)
	runtime.KeepAlive(cState_7AllocMap)
	runtime.KeepAlive(cState_6AllocMap)
	runtime.KeepAlive(cState_5AllocMap)
	runtime.KeepAlive(cState_4AllocMap)
	runtime.KeepAlive(cState_3AllocMap)
	runtime.KeepAlive(cState_2AllocMap)
	runtime.KeepAlive(cState_1AllocMap)
	runtime.KeepAlive(cState_0AllocMap)
	runtime.KeepAlive(cExtoutAllocMap)
	runtime.KeepAlive(cValidateAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_complex_match_config_single function as declared in beagle/beagle.h:1769
func Bg_usb3_complex_match_config_single(Beagle Beagle, Validate byte, Extout byte, State *BeagleUsb3ComplexMatchState) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cValidate, cValidateAllocMap := (C.u08)(Validate), cgoAllocsUnknown
	cExtout, cExtoutAllocMap := (C.u08)(Extout), cgoAllocsUnknown
	cState, cStateAllocMap := State.PassRef()
	__ret := C.bg_usb3_complex_match_config_single(cBeagle, cValidate, cExtout, cState)
	runtime.KeepAlive(cStateAllocMap)
	runtime.KeepAlive(cExtoutAllocMap)
	runtime.KeepAlive(cValidateAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_ext_io_config function as declared in beagle/beagle.h:1778
func Bg_usb3_ext_io_config(Beagle Beagle, Extin_enable byte, Extout_modulation BeagleUsbExtoutType) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cExtin_enable, cExtin_enableAllocMap := (C.u08)(Extin_enable), cgoAllocsUnknown
	cExtout_modulation, cExtout_modulationAllocMap := (C.BeagleUsbExtoutType)(Extout_modulation), cgoAllocsUnknown
	__ret := C.bg_usb3_ext_io_config(cBeagle, cExtin_enable, cExtout_modulation)
	runtime.KeepAlive(cExtout_modulationAllocMap)
	runtime.KeepAlive(cExtin_enableAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb3_memory_test function as declared in beagle/beagle.h:1794
func Bg_usb3_memory_test(Beagle Beagle, Test BeagleUsb3MemoryTestType) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cTest, cTestAllocMap := (C.BeagleUsb3MemoryTestType)(Test), cgoAllocsUnknown
	__ret := C.bg_usb3_memory_test(cBeagle, cTest)
	runtime.KeepAlive(cTestAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_read function as declared in beagle/beagle.h:1801
func Bg_usb2_read(Beagle Beagle, Status *uint32, Events *uint32, Time_sop *uint64, Time_duration *uint64, Time_dataoffset *uint32, Max_bytes int32, Packet *byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := (*C.u32)(unsafe.Pointer(Status)), cgoAllocsUnknown
	cEvents, cEventsAllocMap := (*C.u32)(unsafe.Pointer(Events)), cgoAllocsUnknown
	cTime_sop, cTime_sopAllocMap := (*C.u64)(unsafe.Pointer(Time_sop)), cgoAllocsUnknown
	cTime_duration, cTime_durationAllocMap := (*C.u64)(unsafe.Pointer(Time_duration)), cgoAllocsUnknown
	cTime_dataoffset, cTime_dataoffsetAllocMap := (*C.u32)(unsafe.Pointer(Time_dataoffset)), cgoAllocsUnknown
	cMax_bytes, cMax_bytesAllocMap := (C.int)(Max_bytes), cgoAllocsUnknown
	cPacket, cPacketAllocMap := (*C.u08)(unsafe.Pointer(Packet)), cgoAllocsUnknown
	__ret := C.bg_usb2_read(cBeagle, cStatus, cEvents, cTime_sop, cTime_duration, cTime_dataoffset, cMax_bytes, cPacket)
	runtime.KeepAlive(cPacketAllocMap)
	runtime.KeepAlive(cMax_bytesAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cEventsAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb_read function as declared in beagle/beagle.h:1813
func Bg_usb_read(Beagle Beagle, Status *uint32, Events *uint32, Time_sop *uint64, Time_duration *uint64, Time_dataoffset *uint32, Source *BeagleUsbSource, Max_bytes int32, Packet *byte, Max_k_bytes int32, K_data *byte) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := (*C.u32)(unsafe.Pointer(Status)), cgoAllocsUnknown
	cEvents, cEventsAllocMap := (*C.u32)(unsafe.Pointer(Events)), cgoAllocsUnknown
	cTime_sop, cTime_sopAllocMap := (*C.u64)(unsafe.Pointer(Time_sop)), cgoAllocsUnknown
	cTime_duration, cTime_durationAllocMap := (*C.u64)(unsafe.Pointer(Time_duration)), cgoAllocsUnknown
	cTime_dataoffset, cTime_dataoffsetAllocMap := (*C.u32)(unsafe.Pointer(Time_dataoffset)), cgoAllocsUnknown
	cSource, cSourceAllocMap := (*C.BeagleUsbSource)(unsafe.Pointer(Source)), cgoAllocsUnknown
	cMax_bytes, cMax_bytesAllocMap := (C.int)(Max_bytes), cgoAllocsUnknown
	cPacket, cPacketAllocMap := (*C.u08)(unsafe.Pointer(Packet)), cgoAllocsUnknown
	cMax_k_bytes, cMax_k_bytesAllocMap := (C.int)(Max_k_bytes), cgoAllocsUnknown
	cK_data, cK_dataAllocMap := (*C.u08)(unsafe.Pointer(K_data)), cgoAllocsUnknown
	__ret := C.bg_usb_read(cBeagle, cStatus, cEvents, cTime_sop, cTime_duration, cTime_dataoffset, cSource, cMax_bytes, cPacket, cMax_k_bytes, cK_data)
	runtime.KeepAlive(cK_dataAllocMap)
	runtime.KeepAlive(cMax_k_bytesAllocMap)
	runtime.KeepAlive(cPacketAllocMap)
	runtime.KeepAlive(cMax_bytesAllocMap)
	runtime.KeepAlive(cSourceAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cEventsAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_read_data_timing function as declared in beagle/beagle.h:1829
func Bg_usb2_read_data_timing(Beagle Beagle, Status *uint32, Events *uint32, Time_sop *uint64, Time_duration *uint64, Time_dataoffset *uint32, Max_bytes int32, Packet *byte, Max_timing int32, Data_timing *uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := (*C.u32)(unsafe.Pointer(Status)), cgoAllocsUnknown
	cEvents, cEventsAllocMap := (*C.u32)(unsafe.Pointer(Events)), cgoAllocsUnknown
	cTime_sop, cTime_sopAllocMap := (*C.u64)(unsafe.Pointer(Time_sop)), cgoAllocsUnknown
	cTime_duration, cTime_durationAllocMap := (*C.u64)(unsafe.Pointer(Time_duration)), cgoAllocsUnknown
	cTime_dataoffset, cTime_dataoffsetAllocMap := (*C.u32)(unsafe.Pointer(Time_dataoffset)), cgoAllocsUnknown
	cMax_bytes, cMax_bytesAllocMap := (C.int)(Max_bytes), cgoAllocsUnknown
	cPacket, cPacketAllocMap := (*C.u08)(unsafe.Pointer(Packet)), cgoAllocsUnknown
	cMax_timing, cMax_timingAllocMap := (C.int)(Max_timing), cgoAllocsUnknown
	cData_timing, cData_timingAllocMap := (*C.u32)(unsafe.Pointer(Data_timing)), cgoAllocsUnknown
	__ret := C.bg_usb2_read_data_timing(cBeagle, cStatus, cEvents, cTime_sop, cTime_duration, cTime_dataoffset, cMax_bytes, cPacket, cMax_timing, cData_timing)
	runtime.KeepAlive(cData_timingAllocMap)
	runtime.KeepAlive(cMax_timingAllocMap)
	runtime.KeepAlive(cPacketAllocMap)
	runtime.KeepAlive(cMax_bytesAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cEventsAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_read_bit_timing function as declared in beagle/beagle.h:1843
func Bg_usb2_read_bit_timing(Beagle Beagle, Status *uint32, Events *uint32, Time_sop *uint64, Time_duration *uint64, Time_dataoffset *uint32, Max_bytes int32, Packet *byte, Max_timing int32, Bit_timing *uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := (*C.u32)(unsafe.Pointer(Status)), cgoAllocsUnknown
	cEvents, cEventsAllocMap := (*C.u32)(unsafe.Pointer(Events)), cgoAllocsUnknown
	cTime_sop, cTime_sopAllocMap := (*C.u64)(unsafe.Pointer(Time_sop)), cgoAllocsUnknown
	cTime_duration, cTime_durationAllocMap := (*C.u64)(unsafe.Pointer(Time_duration)), cgoAllocsUnknown
	cTime_dataoffset, cTime_dataoffsetAllocMap := (*C.u32)(unsafe.Pointer(Time_dataoffset)), cgoAllocsUnknown
	cMax_bytes, cMax_bytesAllocMap := (C.int)(Max_bytes), cgoAllocsUnknown
	cPacket, cPacketAllocMap := (*C.u08)(unsafe.Pointer(Packet)), cgoAllocsUnknown
	cMax_timing, cMax_timingAllocMap := (C.int)(Max_timing), cgoAllocsUnknown
	cBit_timing, cBit_timingAllocMap := (*C.u32)(unsafe.Pointer(Bit_timing)), cgoAllocsUnknown
	__ret := C.bg_usb2_read_bit_timing(cBeagle, cStatus, cEvents, cTime_sop, cTime_duration, cTime_dataoffset, cMax_bytes, cPacket, cMax_timing, cBit_timing)
	runtime.KeepAlive(cBit_timingAllocMap)
	runtime.KeepAlive(cMax_timingAllocMap)
	runtime.KeepAlive(cPacketAllocMap)
	runtime.KeepAlive(cMax_bytesAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cEventsAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_reconstruct_timing function as declared in beagle/beagle.h:1857
func Bg_usb2_reconstruct_timing(Target_config uint32, Num_bytes int32, Packet *byte, Max_timing int32, Bit_timing *uint32) int32 {
	cTarget_config, cTarget_configAllocMap := (C.u32)(Target_config), cgoAllocsUnknown
	cNum_bytes, cNum_bytesAllocMap := (C.int)(Num_bytes), cgoAllocsUnknown
	cPacket, cPacketAllocMap := (*C.u08)(unsafe.Pointer(Packet)), cgoAllocsUnknown
	cMax_timing, cMax_timingAllocMap := (C.int)(Max_timing), cgoAllocsUnknown
	cBit_timing, cBit_timingAllocMap := (*C.u32)(unsafe.Pointer(Bit_timing)), cgoAllocsUnknown
	__ret := C.bg_usb2_reconstruct_timing(cTarget_config, cNum_bytes, cPacket, cMax_timing, cBit_timing)
	runtime.KeepAlive(cBit_timingAllocMap)
	runtime.KeepAlive(cMax_timingAllocMap)
	runtime.KeepAlive(cPacketAllocMap)
	runtime.KeepAlive(cNum_bytesAllocMap)
	runtime.KeepAlive(cTarget_configAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb_stats_config function as declared in beagle/beagle.h:1880
func Bg_usb_stats_config(Beagle Beagle, Config *BeagleUsbStatsConfig) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cConfig, cConfigAllocMap := Config.PassRef()
	__ret := C.bg_usb_stats_config(cBeagle, cConfig)
	runtime.KeepAlive(cConfigAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb_stats_config_query function as declared in beagle/beagle.h:1886
func Bg_usb_stats_config_query(Beagle Beagle, Config *BeagleUsbStatsConfig) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cConfig, cConfigAllocMap := Config.PassRef()
	__ret := C.bg_usb_stats_config_query(cBeagle, cConfig)
	runtime.KeepAlive(cConfigAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb_stats_reset function as declared in beagle/beagle.h:1892
func Bg_usb_stats_reset(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg_usb_stats_reset(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb_stats_read function as declared in beagle/beagle.h:1960
func Bg_usb_stats_read(Beagle Beagle, Stats *BeagleUsbStats) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStats, cStatsAllocMap := Stats.PassRef()
	__ret := C.bg_usb_stats_read(cBeagle, cStats)
	runtime.KeepAlive(cStatsAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usb2_stats_read function as declared in beagle/beagle.h:1966
func Bg_usb2_stats_read(Beagle Beagle, Stats *BeagleUsb2Stats) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStats, cStatsAllocMap := Stats.PassRef()
	__ret := C.bg_usb2_stats_read(cBeagle, cStats)
	runtime.KeepAlive(cStatsAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg5000_cross_analyzer_sync_config function as declared in beagle/beagle.h:2004
func Bg5000_cross_analyzer_sync_config(Beagle Beagle, Cross_sync_mode Beagle5000CrossAnalyzerSyncMode, Cross_trigger_mode Beagle5000CrossAnalyzerMode, Cross_stop_mode Beagle5000CrossAnalyzerMode) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cCross_sync_mode, cCross_sync_modeAllocMap := (C.Beagle5000CrossAnalyzerSyncMode)(Cross_sync_mode), cgoAllocsUnknown
	cCross_trigger_mode, cCross_trigger_modeAllocMap := (C.Beagle5000CrossAnalyzerMode)(Cross_trigger_mode), cgoAllocsUnknown
	cCross_stop_mode, cCross_stop_modeAllocMap := (C.Beagle5000CrossAnalyzerMode)(Cross_stop_mode), cgoAllocsUnknown
	__ret := C.bg5000_cross_analyzer_sync_config(cBeagle, cCross_sync_mode, cCross_trigger_mode, cCross_stop_mode)
	runtime.KeepAlive(cCross_stop_modeAllocMap)
	runtime.KeepAlive(cCross_trigger_modeAllocMap)
	runtime.KeepAlive(cCross_sync_modeAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg5000_cross_analyzer_sync_release function as declared in beagle/beagle.h:2012
func Bg5000_cross_analyzer_sync_release(Beagle Beagle) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	__ret := C.bg5000_cross_analyzer_sync_release(cBeagle)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_mdio_read function as declared in beagle/beagle.h:2038
func Bg_mdio_read(Beagle Beagle, Status *uint32, Time_sop *uint64, Time_duration *uint64, Time_dataoffset *uint32, Data_in *uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := (*C.u32)(unsafe.Pointer(Status)), cgoAllocsUnknown
	cTime_sop, cTime_sopAllocMap := (*C.u64)(unsafe.Pointer(Time_sop)), cgoAllocsUnknown
	cTime_duration, cTime_durationAllocMap := (*C.u64)(unsafe.Pointer(Time_duration)), cgoAllocsUnknown
	cTime_dataoffset, cTime_dataoffsetAllocMap := (*C.u32)(unsafe.Pointer(Time_dataoffset)), cgoAllocsUnknown
	cData_in, cData_inAllocMap := (*C.u32)(unsafe.Pointer(Data_in)), cgoAllocsUnknown
	__ret := C.bg_mdio_read(cBeagle, cStatus, cTime_sop, cTime_duration, cTime_dataoffset, cData_in)
	runtime.KeepAlive(cData_inAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_mdio_read_bit_timing function as declared in beagle/beagle.h:2048
func Bg_mdio_read_bit_timing(Beagle Beagle, Status *uint32, Time_sop *uint64, Time_duration *uint64, Time_dataoffset *uint32, Data_in *uint32, Max_timing int32, Bit_timing *uint32) int32 {
	cBeagle, cBeagleAllocMap := (C.Beagle)(Beagle), cgoAllocsUnknown
	cStatus, cStatusAllocMap := (*C.u32)(unsafe.Pointer(Status)), cgoAllocsUnknown
	cTime_sop, cTime_sopAllocMap := (*C.u64)(unsafe.Pointer(Time_sop)), cgoAllocsUnknown
	cTime_duration, cTime_durationAllocMap := (*C.u64)(unsafe.Pointer(Time_duration)), cgoAllocsUnknown
	cTime_dataoffset, cTime_dataoffsetAllocMap := (*C.u32)(unsafe.Pointer(Time_dataoffset)), cgoAllocsUnknown
	cData_in, cData_inAllocMap := (*C.u32)(unsafe.Pointer(Data_in)), cgoAllocsUnknown
	cMax_timing, cMax_timingAllocMap := (C.int)(Max_timing), cgoAllocsUnknown
	cBit_timing, cBit_timingAllocMap := (*C.u32)(unsafe.Pointer(Bit_timing)), cgoAllocsUnknown
	__ret := C.bg_mdio_read_bit_timing(cBeagle, cStatus, cTime_sop, cTime_duration, cTime_dataoffset, cData_in, cMax_timing, cBit_timing)
	runtime.KeepAlive(cBit_timingAllocMap)
	runtime.KeepAlive(cMax_timingAllocMap)
	runtime.KeepAlive(cData_inAllocMap)
	runtime.KeepAlive(cTime_dataoffsetAllocMap)
	runtime.KeepAlive(cTime_durationAllocMap)
	runtime.KeepAlive(cTime_sopAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cBeagleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_mdio_parse function as declared in beagle/beagle.h:2068
func Bg_mdio_parse(Packet uint32, Clause *byte, Opcode *byte, Addr1 *byte, Addr2 *byte, Data *uint16) int32 {
	cPacket, cPacketAllocMap := (C.u32)(Packet), cgoAllocsUnknown
	cClause, cClauseAllocMap := (*C.u08)(unsafe.Pointer(Clause)), cgoAllocsUnknown
	cOpcode, cOpcodeAllocMap := (*C.u08)(unsafe.Pointer(Opcode)), cgoAllocsUnknown
	cAddr1, cAddr1AllocMap := (*C.u08)(unsafe.Pointer(Addr1)), cgoAllocsUnknown
	cAddr2, cAddr2AllocMap := (*C.u08)(unsafe.Pointer(Addr2)), cgoAllocsUnknown
	cData, cDataAllocMap := (*C.u16)(unsafe.Pointer(Data)), cgoAllocsUnknown
	__ret := C.bg_mdio_parse(cPacket, cClause, cOpcode, cAddr1, cAddr2, cData)
	runtime.KeepAlive(cDataAllocMap)
	runtime.KeepAlive(cAddr2AllocMap)
	runtime.KeepAlive(cAddr1AllocMap)
	runtime.KeepAlive(cOpcodeAllocMap)
	runtime.KeepAlive(cClauseAllocMap)
	runtime.KeepAlive(cPacketAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_iv_mon_parse function as declared in beagle/beagle.h:2084
func Bg_iv_mon_parse(Length int32, Packet []byte, Voltage []float32, Current []float32) int32 {
	cLength, cLengthAllocMap := (C.int)(Length), cgoAllocsUnknown
	cPacket, cPacketAllocMap := copyPU08Bytes((*sliceHeader)(unsafe.Pointer(&Packet)))
	cVoltage, cVoltageAllocMap := copyPF32Bytes((*sliceHeader)(unsafe.Pointer(&Voltage)))
	cCurrent, cCurrentAllocMap := copyPF32Bytes((*sliceHeader)(unsafe.Pointer(&Current)))
	__ret := C.bg_iv_mon_parse(cLength, cPacket, cVoltage, cCurrent)
	runtime.KeepAlive(cCurrentAllocMap)
	runtime.KeepAlive(cVoltageAllocMap)
	runtime.KeepAlive(cPacketAllocMap)
	runtime.KeepAlive(cLengthAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usbpd_bits_length function as declared in beagle/beagle.h:2103
func Bg_usbpd_bits_length(Length int32, Status uint32) int32 {
	cLength, cLengthAllocMap := (C.int)(Length), cgoAllocsUnknown
	cStatus, cStatusAllocMap := (C.u32)(Status), cgoAllocsUnknown
	__ret := C.bg_usbpd_bits_length(cLength, cStatus)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cLengthAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Bg_usbpd_mon_parse function as declared in beagle/beagle.h:2110
func Bg_usbpd_mon_parse(Length int32, Packet []byte, Status uint32, Preamble_length []uint32, Header []uint32, Crc []uint32, Max_bytes uint32, Data []byte) int32 {
	cLength, cLengthAllocMap := (C.int)(Length), cgoAllocsUnknown
	cPacket, cPacketAllocMap := copyPU08Bytes((*sliceHeader)(unsafe.Pointer(&Packet)))
	cStatus, cStatusAllocMap := (C.u32)(Status), cgoAllocsUnknown
	cPreamble_length, cPreamble_lengthAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Preamble_length)))
	cHeader, cHeaderAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Header)))
	cCrc, cCrcAllocMap := copyPU32Bytes((*sliceHeader)(unsafe.Pointer(&Crc)))
	cMax_bytes, cMax_bytesAllocMap := (C.u32)(Max_bytes), cgoAllocsUnknown
	cData, cDataAllocMap := copyPU08Bytes((*sliceHeader)(unsafe.Pointer(&Data)))
	__ret := C.bg_usbpd_mon_parse(cLength, cPacket, cStatus, cPreamble_length, cHeader, cCrc, cMax_bytes, cData)
	runtime.KeepAlive(cDataAllocMap)
	runtime.KeepAlive(cMax_bytesAllocMap)
	runtime.KeepAlive(cCrcAllocMap)
	runtime.KeepAlive(cHeaderAllocMap)
	runtime.KeepAlive(cPreamble_lengthAllocMap)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cPacketAllocMap)
	runtime.KeepAlive(cLengthAllocMap)
	__v := (int32)(__ret)
	return __v
}
