GENERATOR:
  PackageName: beagle_bindings
  PackageDescription: "bindings to beagle api"
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  Includes: ["beagle.h"]
  Defines:
    DEBUG: 1
  Options:
    SafeStrings: true
  FlagGroups:
    - { name: LDFLAGS, flags: [ "-L${SRCDIR} -lstdc++" ] }
    - { name: CFLAGS, flags: [ "-I.","-DDEBUG","-I${SRCDIR}/" ] }

PARSER:
  Defines:
    DEBUG: 1
  SourcesPaths: ["beagle.h"]
  Arch: arm


TRANSLATOR:
  Defines:
    DEBUG: 1
  ConstRules:
    defines: eval
  Rules:
    global:
      - { action: accept, from: "^BG" }
      - { action: accept, from: "^bg" }
      - { action: accept, from: "^Beagle" }
      - { transform: export }
    function:

  PtrTips:
    struct:
      - { target: ^BeagleUsb2DataMatch, tips: [ 0,0,ref,0,ref ] }
      - { target: ^BeagleUsb2DataMatchUnit, tips: [ 0,0,0,0,ref,0,ref,0,0,0,0,0,0,0,0 ] }
      - { target: ^BeagleUsb3DataMatchUnit, tips: [ 0,0,ref,0,ref,0,0,0,0,0,0,0,0 ] }
    function:
      - { target: ^bg_mdio_read$, tips: [ 0,ref,ref,ref,ref,ref ] }
      - { target: ^bg_mdio_read_bit_timing$, tips: [ 0,ref,ref,ref,ref,ref,ref,ref ] }
      - { target: ^bg_mdio_parse$, tips: [ 0,ref,ref,ref,ref,ref ] }

      - { target: ^bg_usb_license_read$, tips: [ 0,0,ref ] }
      - { target: ^bg_usb_license_write$, tips: [ 0,0,ref ] }
      - { target: ^bg_usb_read$, tips: [ 0,ref,ref,ref,ref,ref,ref,0,ref,0,ref] }
      - { target: ^bg_usb_stats_config$, tips: [ 0,ref ] }
      - { target: ^bg_usb_stats_config_query$, tips: [ 0,ref ] }
      - { target: ^bg_usb_stats_read$, tips: [ 0,ref ] }

      - { target: ^bg_usb2_capture_status$, tips: [ 0,ref,ref,ref,ref,ref ] }
      - { target: ^bg_usb2_digital_out_match$, tips: [ 0,0,ref,ref ] }
      - { target: ^bg_usb2_complex_match_config$, tips: [ 0,0,0,ref,ref,ref,ref,ref,ref,ref,ref ] }
      - { target: ^bg_usb2_complex_match_config_single$, tips: [ 0,0,0,ref ] }
      - { target: ^bg_usb2_read$, tips: [ 0,ref,ref,ref,ref,ref,0,ref ] }
      - { target: ^bg_usb2_read_data_timing$, tips: [ 0,ref,ref,ref,ref,ref,0,ref,0,ref ] }
      - { target: ^bg_usb2_read_bit_timing$, tips: [ 0,ref,ref,ref,ref,ref,0,ref,0,ref ] }
      - { target: ^bg_usb2_stats_read$, tips: [ 0,ref ] }
      - { target: ^bg_usb2_reconstruct_timing$, tips: [ 0,0,ref,0,ref ] }

      - { target: ^bg_usb3_capture_buffer_config_query$, tips: [ 0,ref,ref ] }
      - { target: ^bg_usb3_capture_status$, tips: [ 0,ref,ref,ref,ref,ref ] }
      - { target: ^bg_usb3_link_config$, tips: [ 0,ref,ref ] }
      - { target: ^bg_usb3_complex_match_config$, tips: [ 0,0,0,ref,ref,ref,ref,ref,ref,ref,ref ] }
      - { target: ^bg_usb3_complex_match_config_single$, tips: [ 0,0,0,ref ] }

      

      
      

